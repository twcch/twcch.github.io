<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IThome 鐵人賽 2025 on 志謙&#39;s Blog</title>
    <link>http://twcch.io/tags/ithome-%E9%90%B5%E4%BA%BA%E8%B3%BD-2025/</link>
    <description>Recent content in IThome 鐵人賽 2025 on 志謙&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 29 Jul 2025 00:00:00 +0800</lastBuildDate>
    <atom:link href="http://twcch.io/tags/ithome-%E9%90%B5%E4%BA%BA%E8%B3%BD-2025/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(Day 2) 線性迴歸 (Linear Regression)</title>
      <link>http://twcch.io/posts/ironman_2025/articles_25072901/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/ironman_2025/articles_25072901/</guid>
      <description>&lt;h1 id=&#34;day-2-線性迴歸-linear-regression&#34;&gt;(Day 2) 線性迴歸 (Linear Regression)&lt;/h1&gt;&#xA;&lt;p&gt;機器學習中的線性迴歸 (Linear Regression) 模型是最基礎、也最經典的機器學習模型之一，雖然它簡單，但是它是許多模型都是由線性迴歸模型延伸的，也是所有預測模型的入門門檻，本文章會從三個部分來介紹線性迴歸:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;為什麼要學 Linear Regression?&lt;/li&gt;&#xA;&lt;li&gt;線性迴歸的核心概念與行為特徵&lt;/li&gt;&#xA;&lt;li&gt;Python 實作與分析&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-為什麼要學-linear-regression&#34;&gt;✅ 為什麼要學 Linear Regression?&lt;/h2&gt;&#xA;&lt;p&gt;雖然線性模型簡單，但它不僅存在於理論書本中。以下是幾個學習 Linear Regression 的現實理由:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;所有迴歸模型的基礎，包括 Ridge、Lasso、Elastic Net 都是它的延伸 (後續會介紹)&lt;/li&gt;&#xA;&lt;li&gt;許多商業應用中仍具有價值 (如: 預測銷售額、估算財務變數、解釋變數影響力)&lt;/li&gt;&#xA;&lt;li&gt;適合作為 baseline 模型&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;簡單來說，學好 Linear Regression，不只是學會一個模型，而是學會觀察資料與模型行為之間的互動。&lt;/p&gt;&#xA;&lt;h2 id=&#34;-模型邏輯與核心概念&#34;&gt;🧠 模型邏輯與核心概念&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-目標是什麼&#34;&gt;📌 目標是什麼?&lt;/h3&gt;&#xA;&lt;p&gt;回歸模型有一個假設在於，資料集與所有其他未知的點會位於一個超平面之上 (即為線性關係)；若資料集為非線性關係，可能就必須要考慮其他模型。所以我們想要學一個函數 $f(x)$，這個函數是「線性的」，也就是:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\hat{y} = \beta_0 + \mathbf{x}^\top \boldsymbol{\beta}&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;其中:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$\mathbf{x} = [x_1, x_2, \ldots, x_m]^\top \in \mathbb{R}^m$ 為特徵向量&lt;/li&gt;&#xA;&lt;li&gt;$\beta = [\beta_1, \beta_2, \ldots, \beta_m]^\top \in \mathbb{R}^m$ 為對應的係數向量&lt;/li&gt;&#xA;&lt;li&gt;$\beta_0 \in \mathbb{R}$ 為截距項 (intercept)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;這表示我們相信「每個變數的影響是線性可加的」。&lt;/p&gt;</description>
    </item>
    <item>
      <title>(Day 1) 30 天入門常見的機器學習演算法</title>
      <link>http://twcch.io/posts/ironman_2025/articles_25072801/</link>
      <pubDate>Mon, 28 Jul 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/ironman_2025/articles_25072801/</guid>
      <description>&lt;p&gt;在學習機器學習 (Machine Learning) 的過程中，可能會陷入兩種極端，一種是只會調用套件 (套膜)，模型背後的機制一知半解，遇到問題只能「換模型試試看」，或者是過度陷入數學細節，花大量時間推導公式，卻無法轉化為實際應用與模型選擇能力。&lt;/p&gt;&#xA;&lt;p&gt;本系列的目的，希望建立一種扎實但務實的學習節奏，會用清晰直白的方式，介紹每個常見演算法的核心概念與使用情境，透過簡潔實作觀察模型行為，並學會在不同情境中做出合理的模型選擇與解釋判斷，所以本系列不會太詳細進行公式推導，但會清楚掌握每個模型「為什麼有效」「什麼時候用」「有什麼限制」。&lt;/p&gt;&#xA;&lt;h2 id=&#34;本系列的學習深度-聚焦在-level-23&#34;&gt;本系列的學習深度: 聚焦在 Level 2–3&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;等級&lt;/th&gt;&#xA;          &lt;th&gt;定義&lt;/th&gt;&#xA;          &lt;th&gt;在本系列的實踐目標&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Level 1&lt;/td&gt;&#xA;          &lt;td&gt;會用套件建模&lt;/td&gt;&#xA;          &lt;td&gt;✅ 使用 sklearn 等工具快速建模&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Level 2&lt;/td&gt;&#xA;          &lt;td&gt;理解模型的概念與原理&lt;/td&gt;&#xA;          &lt;td&gt;✅ 說得出每個模型的邏輯與核心機制&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Level 3&lt;/td&gt;&#xA;          &lt;td&gt;能比較模型優劣與應用場景選擇&lt;/td&gt;&#xA;          &lt;td&gt;✅ 理解適用時機、模型之間的 trade-off&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Level 4+&lt;/td&gt;&#xA;          &lt;td&gt;深入優化與理論推導&lt;/td&gt;&#xA;          &lt;td&gt;🚫 本系列不會深入涵蓋，建議另尋高階資源&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;簡單來說，本系列是為了讓你從「能用」進展到「能理解、能比較、能選擇」。這是進入任何資料科學應用、研究或進階學習的必要中介層。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三個核心理念&#34;&gt;三個核心理念&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;模型導向: 每篇聚焦一個演算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;從 Linear Regression 到 BERT，每一篇皆以單一模型為核心單元，深入該模型的動機、用途與限制。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;實作主線: 用程式理解模型邏輯&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不只是說明理論，每篇文章都會有乾淨的 Python 實作範例，幫助你從 input → training → evaluation 走完整流程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;懂得選擇: 強調模型行為與應用場景判斷&#xA;&lt;ul&gt;&#xA;&lt;li&gt;同樣一筆資料，你會選 Logistic Regression 還是 XGBoost? 本系列會訓練你從需求出發，做出有邏輯的建模決策。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;結語-從演算法的眼中重建你對機器學習的理解&#34;&gt;結語: 從演算法的眼中，重建你對機器學習的理解&lt;/h2&gt;&#xA;&lt;p&gt;你無需一次學完所有理論、掌握所有工具，但你必須看懂模型是怎麼工作的、哪裡適用、為什麼失敗，這正是我們接下來 30 篇文章要完成的目標。&lt;/p&gt;&#xA;&lt;p&gt;我會陪你從簡單線性模型，一路走到深度架構與語言模型，系統性地建構你對機器學習演算法的語感與判斷力。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
