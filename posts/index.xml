<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>部落格 on 志謙&#39;s Blog</title>
    <link>http://twcch.io/posts/</link>
    <description>Recent content in 部落格 on 志謙&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Jul 2025 00:00:00 +0800</lastBuildDate>
    <atom:link href="http://twcch.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>學歷無用: 我仍相信學習的價值</title>
      <link>http://twcch.io/posts/2025/articles_25071601/</link>
      <pubDate>Wed, 16 Jul 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/2025/articles_25071601/</guid>
      <description>&lt;p&gt;近年來，我觀察到無論在台灣還是中國，「學歷無用論」的聲音愈發強烈。許多人開始質疑讀書是否還有意義，認為不靠學歷反而更能致富，網紅、直播、投資客、白手起家的商人充斥版面，讀書人反倒被視為落後者、被剝削者、社會規訓的犧牲品，但我有不同的看法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;為什麼學歷無用論會出現&#34;&gt;為什麼「學歷無用論」會出現？&lt;/h2&gt;&#xA;&lt;p&gt;我認為這不是單純的個人選擇，而是結構性問題:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;教育擴張讓學歷貶值，碩博士已成基本門檻&lt;/li&gt;&#xA;&lt;li&gt;階級複製讓弱勢者難以翻身，「努力不再保證回報」&lt;/li&gt;&#xA;&lt;li&gt;高回報的機會集中在少數風口行業，炒短線者當道&lt;/li&gt;&#xA;&lt;li&gt;社群媒體製造「一夜暴富」神話，反智氛圍蔓延&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;「讀書沒用」已經不只是判斷，更是一種情緒&lt;strong&gt;對制度失望、對未來無感、對努力失信&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;那讀書究竟還有沒有價值&#34;&gt;那讀書究竟還有沒有價值?&lt;/h2&gt;&#xA;&lt;p&gt;如果只探討「賺多少錢」作為唯一標準，那的確讀書沒有用，因為讀書不一定有最即時的回報。但若把時間尺度拉長、把價值層次拉高，會發現：「學習不是為了立刻賺錢，而是為了讓你能夠分辨真偽、建立邏輯、理解世界、保有尊嚴地思考與行動」。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;工具層面: 讓你擁有專業能力，立足於社會&lt;/li&gt;&#xA;&lt;li&gt;認知層面: 訓練你思辨、整合、表達的能力&lt;/li&gt;&#xA;&lt;li&gt;存在層面: 引導你認識自己、世界與人生的關係&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;簡單來說，我 30 年的人生觀告訴我，讀書可以讓我的境界提升，能夠自我昇華&lt;/p&gt;&#xA;&lt;h2 id=&#34;我們為什麼會覺得努力應該有回報&#34;&gt;我們為什麼會覺得「努力應該有回報」?&lt;/h2&gt;&#xA;&lt;p&gt;許多陷入犬儒的人會說: 「我不是不努力，我努力過了，沒用。」&lt;/p&gt;&#xA;&lt;p&gt;這恰恰反映出對努力的誤解，努力是會失敗的，而且也從來不會立即兌現，它更像是一種長期累積的複利，過程中你會改變視角、強化心智，最終與眾不同&lt;/p&gt;&#xA;&lt;p&gt;真正的努力，不只是行為上的執行，更是認知上的轉變。不是用熱血硬幹，而是用策略、用反思、用節奏走出自己的路。&lt;/p&gt;&#xA;&lt;h2 id=&#34;那我們應該怎麼做&#34;&gt;那我們應該怎麼做？&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不要盲目追求文憑，但也不要過早放棄學習&lt;/li&gt;&#xA;&lt;li&gt;看懂社會結構的變動，但也要打造自己可控的核心能力&lt;/li&gt;&#xA;&lt;li&gt;知道短期內「投機」可能勝出，但&lt;strong&gt;長期是價值與認知力的勝利&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;一段送給未來自己的話&#34;&gt;一段送給未來自己的話&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;讀書不是為了成功，而是為了不被世界輕易騙走&lt;/li&gt;&#xA;&lt;li&gt;當社會用最廉價的快樂來交換你一生的時間時&lt;/li&gt;&#xA;&lt;li&gt;教育與自省，是你最後的防線&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;哪怕這個時代看起來對知識不再禮遇，我仍願意選擇學習，因為&lt;strong&gt;我相信厚積才能薄發，深耕才能穿透表象，真正理解世界，並在其中活出自己的姿態&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>實戰專案 - Titanic 生存預測專案</title>
      <link>http://twcch.io/posts/2025/articles_25063001/</link>
      <pubDate>Mon, 30 Jun 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/2025/articles_25063001/</guid>
      <description>&lt;p&gt;這是一個資料科學專案，目標是透過 Kaggle 經典的 Titanic 生存預測題目，建立一套結構清晰、模組化的預測系統。我不只是想交出一份準確的預測結果，更希望藉由這個專案練習:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如何設計可擴充、可維護的資料分析架構&lt;/li&gt;&#xA;&lt;li&gt;如何把模型訓練與推論流程標準化&lt;/li&gt;&#xA;&lt;li&gt;如何用設定檔 (config-driven) 控制整個 pipeline&lt;/li&gt;&#xA;&lt;li&gt;如何實踐工程導向的資料科學流程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;GitHub 原始碼: &lt;a href=&#34;https://github.com/twcch/TitanicSurvivalPrediction&#34;&gt;https://github.com/twcch/TitanicSurvivalPrediction&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;專案定位不只是解題而是設計一套解法系統&#34;&gt;專案定位：不只是「解題」，而是「設計一套解法系統」&lt;/h2&gt;&#xA;&lt;p&gt;我不滿足於單純把資料丟進模型調整參數。我希望打造的是一個「可重複使用的機器學習預測框架」，因此我做了以下幾點設計:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;架構模組化: 依照功能拆分為 data/, features/, models/, utils/，程式碼清楚分工&lt;/li&gt;&#xA;&lt;li&gt;流程自動化: 所有步驟都由 main.py 控制，方便一鍵執行與重現實驗&lt;/li&gt;&#xA;&lt;li&gt;設定檔驅動: 核心設定集中管理於 config.json，可以快速切換特徵、模型參數與輸出路徑&lt;/li&gt;&#xA;&lt;li&gt;可擴充性設計: 未來若要換模型、加特徵、改評估指標，幾乎不需改動主程式碼&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;這些設計不只是在技術上提升效率，也讓我在做資料科學時，更接近實務工作者的思維模式&lt;/p&gt;&#xA;&lt;h2 id=&#34;資料前處理與特徵工程-每個欄位都要能解釋&#34;&gt;資料前處理與特徵工程: 每個欄位都要能「解釋」&lt;/h2&gt;&#xA;&lt;p&gt;我對特徵的要求是: 不只要對模型有用，更要有邏輯、可解釋&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;處理缺失值&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Age 用中位數填補&lt;/li&gt;&#xA;&lt;li&gt;Embarked 用眾數填補&lt;/li&gt;&#xA;&lt;li&gt;Fare 缺值極少，仍完整處理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;創造新特徵&#xA;&lt;ul&gt;&#xA;&lt;li&gt;FamilySize = SibSp + Parch: 模擬家庭是否有互助效果&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;選定使用特徵&#xA;&lt;ul&gt;&#xA;&lt;li&gt;類別型: Pclass, Sex, Embarked, Title&lt;/li&gt;&#xA;&lt;li&gt;數值型: Age, Fare, FamilySize&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;模型設定-我選擇-xgboost但更重視可控性&#34;&gt;模型設定: 我選擇 XGBoost，但更重視可控性&lt;/h2&gt;&#xA;&lt;p&gt;雖然這個任務可以用很多模型解，但我選擇以 XGBoost 為主模型，理由如下:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tree-based 模型不需要特徵標準化，工程處理更簡潔&lt;/li&gt;&#xA;&lt;li&gt;對類別特徵與數值特徵的混合表現良好&lt;/li&gt;&#xA;&lt;li&gt;在 Kaggle 類似任務中表現穩定，可作為 baseline&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;模型訓練與推論流程&#34;&gt;模型訓練與推論流程&lt;/h2&gt;&#xA;&lt;p&gt;整個流程包含以下幾步，由 main.py 控制:&lt;/p&gt;</description>
    </item>
    <item>
      <title>當老師只靠 ChatGPT 回信：我們期待的不是答案，而是理解</title>
      <link>http://twcch.io/posts/2025/articles_25062501/</link>
      <pubDate>Wed, 25 Jun 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/2025/articles_25062501/</guid>
      <description>&lt;p&gt;最近，我正在參加一門職訓課程。本來對這堂課滿懷期待，尤其是對某位老師的專業背景很感興趣。不過，隨著課程進行，我漸漸感到一股說不出的落差感：每當我主動提出深入問題，收到的回信卻幾乎都像是 ChatGPT 生成的答案——格式漂亮、邏輯完整、語氣中立，但就是少了「人味」與「針對性」。&lt;/p&gt;&#xA;&lt;p&gt;是的，我知道他不是完全照抄。他有修改、有加註、有整合，但整體感受依然強烈：「這不是一個人對我問題的理解回應，而是一個工具對所有人都能複製的輸出」。&lt;/p&gt;&#xA;&lt;p&gt;這讓我很困惑，甚至有些失望。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我不是反對使用-ai事實上我自己也在用&#34;&gt;我不是反對使用 AI，事實上我自己也在用&lt;/h2&gt;&#xA;&lt;p&gt;先聲明，我並不是那種抗拒 AI 的人。相反地，我本身就是資料分析背景，也有使用 ChatGPT 作為輔助工具的習慣。無論是整理技術架構、釐清概念、或產出初步內容，我完全理解 LLM 在學習與知識組織方面的強大價值。&lt;/p&gt;&#xA;&lt;p&gt;但關鍵在於：「角色不同、責任也不同。」&lt;/p&gt;&#xA;&lt;p&gt;身為學習者，我使用 AI 是為了提升效率與學習深度。但作為老師、講師、顧問，使用 AI 不應該只是「產生回答」這麼簡單。&lt;/p&gt;&#xA;&lt;h2 id=&#34;教學不是交付答案而是理解問題的脈絡&#34;&gt;教學不是交付答案，而是理解問題的脈絡&lt;/h2&gt;&#xA;&lt;p&gt;作為學生，我真正期待的，不是單純的一段知識回答，而是來自老師對我所處困境的共鳴與理解。我希望老師能理解我提問背後的「背景」、「盲點」與「問題設計的目的」，並根據這些脈絡回應，而不是直接貼上一段 ChatGPT 輸出的技術解釋。&lt;/p&gt;&#xA;&lt;p&gt;因為我相信，一個真正理解我問題的老師，會根據我當下的能力、背景、甚至目標給出回應——這種回應，不是任何一個 AI 可以「直接」產出的。&lt;/p&gt;&#xA;&lt;p&gt;而當老師只是當 ChatGPT 是一個快捷鍵，那麼學生也很快會意識到：你不是在回答我，你只是在轉寄一份資訊而已。&lt;/p&gt;&#xA;&lt;h2 id=&#34;當教學淪為貼文產出學生會停止問問題&#34;&gt;當教學淪為「貼文產出」，學生會停止問問題&lt;/h2&gt;&#xA;&lt;p&gt;更嚴重的影響是：這樣的互動會直接打擊學生的提問動力。&lt;/p&gt;&#xA;&lt;p&gt;當我發現提問後收到的回應只是套用模板、換個措辭、格式一致卻無深入探討時，我會懷疑：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我這麼認真思考的問題，真的值得你花時間思考嗎？&lt;/li&gt;&#xA;&lt;li&gt;還是我只是你輸入框中的另一個 prompt？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;久而久之，學生開始不再問問題，也不再相信提問能帶來真正的理解與對話。這對整個學習場域，是一種靜默但致命的傷害。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ai-是輔助不是教學本體&#34;&gt;AI 是輔助，不是教學本體&lt;/h2&gt;&#xA;&lt;p&gt;AI 可以作為老師教學的輔助工具：幫助蒐集資料、釐清知識、快速構思。但它不應該代替老師對學習者的思考與理解責任。在這個知識容易複製的年代，真正無法取代的價值，其實是「對個別學習者的回應能力」。&lt;/p&gt;&#xA;&lt;p&gt;我們當然不會要求每個老師都要一封封親筆手寫、寫出三千字的回信。但至少請不要用 ChatGPT 當成唯一的內容產出來源，更不要用它來「掩蓋」缺乏投入的回應。學習者看得出來，也感受得到。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我寫這篇文章不是為了批評老師而是為了保護教學&#34;&gt;我寫這篇文章，不是為了批評老師，而是為了保護教學&lt;/h2&gt;&#xA;&lt;p&gt;我知道那位老師並不是惡意。他可能工作繁忙、學生太多、壓力很大。我甚至相信他是出於「想要給一個完整答案」的好意才選擇這樣回覆。但我們必須正視一件事：當我們過度依賴工具，而忘記了教學的本質是人與人之間的理解與連結，那麼再強大的 AI 也只會讓教育變得更冷漠、更廉價。&lt;/p&gt;&#xA;&lt;p&gt;我寫這篇文章，是希望提醒每一位教學者：你的價值，不在於你給的答案有多完整，而在於你有多願意理解學生的問題。因為 AI 可以幫你教知識，但唯有你能教會「怎麼成長」。&lt;/p&gt;</description>
    </item>
    <item>
      <title>為什麼用 AI 技術檢測企業舞弊，比想像中更困難?</title>
      <link>http://twcch.io/posts/2025/articles_25060201/</link>
      <pubDate>Mon, 02 Jun 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/2025/articles_25060201/</guid>
      <description>&lt;p&gt;在資料科學領域中，對企業進行舞弊檢測 (Fraud Detection) 被視為是一種分類問題: 輸入企業相關的數據，輸出舞弊或非舞弊。然而，真正投入研究後會發現，這個問題很難解決，非常具挑戰性。&lt;/p&gt;&#xA;&lt;p&gt;我目前主要研究方向，是運用人工智慧 (Artificial Intelligence) 技術，來解決企業進行財務報表舞弊的問題。這類型的議題與銀行信用卡詐欺、保險業中的理賠舞弊、甚至洗錢行為有相似之處，都是稀有事件、後知後覺、動態進化的「敵對性問題」。&lt;/p&gt;&#xA;&lt;h2 id=&#34;為什麼這不是一個單純的分類問題&#34;&gt;為什麼這不是一個單純的分類問題？&lt;/h2&gt;&#xA;&lt;p&gt;在傳統機器學習框架下，分類問題的成功往往來自於充足的標記數據、清晰的邊界條件與相對穩定的資料分佈。然而，舞弊行為恰恰違反了這三項假設。&lt;/p&gt;&#xA;&lt;p&gt;可以從以下幾點具體說明：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;極度不平衡的資料 (Class Imbalance)&lt;/p&gt;&#xA;&lt;p&gt;在實務資料中，舞弊案件往往只佔所有資料的極小比例，可能是千分之一、甚至萬分之一。這意味著如果你採用傳統的精確度 (accuracy) 作為衡量指標，模型即使完全忽略舞弊也能達到 99% 以上的準確率，但這顯然毫無意義。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;標籤不完整且滯後揭露 (Label Latency &amp;amp; Missing Labels)&lt;/p&gt;&#xA;&lt;p&gt;很多舞弊行為要經過數月、甚至數年後才會被調查揭露，更遑論那些永遠未被發現的案件。這使得訓練資料的標籤具有高度不確定性，導致模型容易學到錯誤的決策邊界。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;舞弊技術持續演化 (Concept Drift)&lt;/p&gt;&#xA;&lt;p&gt;犯罪者會根據監管與模型檢測方式持續更新手法，導致模型在部署後迅速失效。這使得即使當下訓練準確的模型，也難以長期維持效能。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;異常並非來自單一特徵，而是整體脈絡的矛盾 (Contextual Inconsistency)&lt;/p&gt;&#xA;&lt;p&gt;財報舞弊往往不是單一財務指標異常，而是多個指標之間出現結構性不一致。例如: 營收大增但現金流卻大減、獲利提升但存貨異常膨脹。這種多變量脈絡異常，遠比簡單的 outlier detection 更為複雜。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;問題不是模型選得不夠好而是問題設定錯了&#34;&gt;問題不是模型選得不夠好，而是問題設定錯了&lt;/h2&gt;&#xA;&lt;p&gt;如果僅停留在「用哪個模型比較準」、「要不要用 XGBoost 還是 LSTM」這種層級的思考，只會陷入技術細節的死胡同，無法解決核心困難。相反地，我認為更關鍵的兩個研究方向是:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如何讓 AI 自己找到潛在的舞弊標籤？&lt;/p&gt;&#xA;&lt;p&gt;採用自監督學習 (Self-Supervised Learning)，不依賴人工標註，而是讓模型自行從大量正常樣本中學習「常態結構」，再對偏離常態的資料進行異常評分，進一步推論出可能的舞弊行為。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如何讓深度模型的決策可以被人類審計人員理解？&lt;/p&gt;&#xA;&lt;p&gt;深度學習模型雖然強大，但往往是黑箱。導入可解釋性方法 (如 SHAP、LIME、Attention 可視化)，可以提升金融監理與內部稽核部門的信任與採用意願，也為模型導入實務場域鋪路。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;這不只是建模問題更是科學問題&#34;&gt;這不只是建模問題，更是科學問題&lt;/h2&gt;&#xA;&lt;p&gt;用 AI 解決舞弊，不是一場簡單的技術堆疊競賽，而是對整個金融風險邏輯、舞弊行為模式、以及資料特性深刻理解的綜合挑戰。這將是我博士研究的起點，從理解問題本質出發，探索如何用 AI 技術建立可行的風險偵測系統，不只是要「分類得準」，更要讓人「信得過」。我認為這是一條難走的路，但也因此充滿價值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>為什麼 AI 正在快速削弱低階 Business Analyst 的價值?</title>
      <link>http://twcch.io/posts/2025/articles_25040701/</link>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/2025/articles_25040701/</guid>
      <description>&lt;p&gt;五年前，我踏入壽險產業，成為一名 Business Analyst (BA)。當時的工作內容相當清晰: 需求文件撰寫、報表製作、簡單的數據分析與溝通協調，是我每天的日常。那時候，這些任務仍需靠人力一項一項完成，效率與品質全憑個人經驗與熟練度。但如今，這些「核心能力」正快速被人工智慧工具重塑，甚至取代。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我親身感受到的衝擊工具進步得比我想像中快&#34;&gt;我親身感受到的衝擊：工具進步得比我想像中快&lt;/h2&gt;&#xA;&lt;p&gt;回到 2022 年底，當我首次使用生成式 AI 工具進行報告撰寫與 Python 代碼產出時，內心的震撼難以言喻。曾經需要數小時才能完成的分析報告，在幾分鐘內生成雛形；曾經為了釐清邏輯關係而反覆修改的流程圖，如今只需一句指令就能完成。&lt;/p&gt;&#xA;&lt;p&gt;我逐漸意識到，這並不是單一任務被加速，而是整個 BA 工作流程正被結構性重塑。換言之，AI 正在壓縮 BA 的邊際價值。這不只是主觀體感，更有明確的研究支持。根據美國 OpenAI 與賓州大學的聯合研究，約有 80% 的職業至少有 10% 的工作內容將受到 LLM 工具的影響；其中，高達 19% 的職業，其超過一半的工作可由 AI 完成。而 BA 尤其是負責初階文件處理、標準報表、流程規劃等工作的分析師，被列為高曝險族群。&lt;/p&gt;&#xA;&lt;p&gt;原因很明確因為 BA 所擅長的文字組織、資料彙整與需求敘述，正是 AI 最擅長模仿與執行的任務。&lt;/p&gt;&#xA;&lt;h2 id=&#34;市場變化正在發生不是未來式而是現在進行式&#34;&gt;市場變化正在發生，不是未來式，而是現在進行式&lt;/h2&gt;&#xA;&lt;p&gt;這樣的趨勢已經開始反映在勞動市場上：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;BA 的職缺增速放緩&lt;/p&gt;&#xA;&lt;p&gt;企業在內部導入 LLM 工具後，發現許多重複性任務可由 AI 初步完成，人力需求自然下降。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;初階 BA 的薪資競爭力下降&lt;/p&gt;&#xA;&lt;p&gt;對於只熟悉基本分析任務、無法主動創造洞察的人才，企業的願意支付薪資上升空間有限。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;高階 BA 的需求反而上升&lt;/p&gt;&#xA;&lt;p&gt;企業更看重能駕馭 AI 工具、快速整合資訊、提出具策略意義建議的分析人才。所謂「會用 AI 的人」，正逐步取代「被 AI 取代的人」。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;這代表，AI 並不是取代所有 BA，而是取代了不進化的 BA。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我的轉型從反應式執行者到主動創造者&#34;&gt;我的轉型：從反應式執行者，到主動創造者&lt;/h2&gt;&#xA;&lt;p&gt;面對這樣的劇變，我無法視若無睹。&lt;/p&gt;&#xA;&lt;p&gt;於是我開始盤點自己的能力，明白單靠產業 Know-how 或不夠專精的技能，將難以應對未來的競爭。因此，我選擇投入更深層的技能學習: 博士班訓練，深度的掌握資料科學、機器學習與深度學習領域，建立自身的核心競爭力。不只是會用工具或套模，而是要能理解這些如何運作、能應用在哪些情境、又有何種侷限。這樣的技能，不僅能讓我在日常分析中脫穎而出，也為我開啟進入 AI 應用領域的可能性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>視覺化專案 - 200 個國家 200 百年 4 分鐘</title>
      <link>http://twcch.io/posts/2025/articles_25040702/</link>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0800</pubDate>
      <guid>http://twcch.io/posts/2025/articles_25040702/</guid>
      <description>&lt;p&gt;這是一個資料視覺化專案——「Dynamic Visualization: 200 Countries, 200 Years, 4 Minutes」。它將涵蓋 1816 至 2016 年，200 個國家的歷史變遷以互動動畫呈現，整體動畫長度約四分鐘，旨在結合「時間」與「地理」維度，提供用戶沉浸式的歷史視覺體驗。&lt;/p&gt;&#xA;&lt;p&gt;成品呈現頁面: &lt;a href=&#34;https://twcch.io/TwoHundredYearsTwoHundredCountries/views.html&#34;&gt;https://twcch.io/TwoHundredYearsTwoHundredCountries/views.html&lt;/a&gt;&lt;br&gt;&#xA;GitHub 原始碼: &lt;a href=&#34;https://github.com/twcch/TwoHundredYearsTwoHundredCountries&#34;&gt;https://github.com/twcch/TwoHundredYearsTwoHundredCountries&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;專案目標-動態傳遞跨時代趨勢&#34;&gt;專案目標: 動態傳遞跨時代趨勢&lt;/h2&gt;&#xA;&lt;p&gt;我這次的核心目的，是打造一段「高品質又美觀」的互動式動畫。相比靜態圖表，此動畫能讓使用者更直覺地感受到全球歷史變化的脈絡與節奏。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;跨國維度: 一次呈現 200 國家在相同指標上的變化&lt;/li&gt;&#xA;&lt;li&gt;跨年代視角: 覆蓋整整兩個世紀&lt;/li&gt;&#xA;&lt;li&gt;互動與美感: 最終以 Plotly Express 強化動畫的動態感與互動性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;這是一個典型的「Proof of Concept」，驗證我能用純 Python 開源工具在本地完成動態資料視覺化，而不是依賴商業軟體。&lt;/p&gt;&#xA;&lt;h2 id=&#34;處理流程解析&#34;&gt;處理流程解析&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;資料擷取與清理&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用 pandas 從 Gapminder 或其他開源來源讀入年份、國家與指標。&lt;/li&gt;&#xA;&lt;li&gt;透過 core/data.py 標準化欄位名稱、處理缺值、並轉換為長型結構，以利後續分析。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;寫入 SQLite&#xA;&lt;ul&gt;&#xA;&lt;li&gt;為了方便查詢與存取，我用 core/sqlite_db.py 將清理後的資料匯入 SQLite 資料庫，一併記錄 metadata。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;產生視覺化資料表&#xA;&lt;ul&gt;&#xA;&lt;li&gt;scripts/build_view_table.py 將資料按年與國家展開，組合成完整用於視覺化的 DataFrame。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;動態驗證：matplotlib 原型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在 proof_of_concept.py 中，以 matplotlib 建立由靜態圖逐幀拼湊的基本動畫，確認播放邏輯與視覺節奏。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;互動動畫：Plotly Express&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最終在 plot_with_px.py 中改以 Plotly Express，產出包含滑動條、國家標籤、時間軸與音效的四分鐘互動畫面，並輸出至 docs/views.html。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;技術選擇與實務考量&#34;&gt;技術選擇與實務考量&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;資料處理: pandas 濾除缺值、重塑表格、處理 metadata，全套操作都在 pandas 中完成。&lt;/li&gt;&#xA;&lt;li&gt;儲存管理: 使用 SQLite 儲存資料，方便查詢與重複執行，而不用每次都從頭開 CSV。&lt;/li&gt;&#xA;&lt;li&gt;動畫原型: matplotlib 可迅速驗證概念、調整幀率與時間間隔。&lt;/li&gt;&#xA;&lt;li&gt;互動視覺化: Plotly Express 能更快速加入滑桿、hover 標籤，動畫更加流暢美觀，也更適合網頁展示。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;展示成果&#34;&gt;展示成果&lt;/h2&gt;&#xA;&lt;p&gt;最終輸出是一個 HTML 檔，內嵌動態 html5 視覺化:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
